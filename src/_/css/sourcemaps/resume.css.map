{"version":3,"sources":["_lib/_layout.scss","_lib/_init.scss","../bower/bootstrap/scss/mixins/_breakpoints.scss","resume.css","resume.scss"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AC1BH;;;;;;;;;;EAUE;AAEF,cAAc;AAOd,kBAAkB;AASlB;;GAEG;ADAH;EACC,qBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,wBAAoB;MAApB,oBAAoB;EACpB,0BAA+B;MAA/B,uBAA+B;UAA/B,+BAA+B;EAC/B,2BAAqB;MAArB,wBAAqB;UAArB,qBAAqB;CACrB;;AAED;;EAEC,cAAc;CACd;;AAED;EACC,iBAAiB;EACjB,sBAAsB;EACtB,iBAAiB;CAoCjB;;AAvCD;EAME,qBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,wBAAoB;MAApB,oBAAoB;EACpB,uBAAuB;EACvB,2BAAqB;MAArB,wBAAqB;UAArB,qBAAqB;CACrB;;AAVF;EAaE,oBAAe;MAAf,mBAAe;UAAf,eAAe;EACf,YAAY;CACZ;;AAfF;EAkBE,iBAAiB;EACjB,mBAAmB;CACnB;;AApBF;EAuBE,YAAY;EACZ,cAAc;EACd,oBAAoB;CACpB;;AA1BF;EA6BE,qEChD+D;CDiD/D;;AA9BF;EAiCE,iBAAiB;CACjB;;AAlCF;EAoCE,iBAAiB;CACjB;;AAKF;EAA0B,oBAAe;MAAf,mBAAe;UAAf,eAAe;CAAI;;AAC7C;EAAkB,YAAY;CAAI;;AAClC;EAAW,YAAY;CAAI;;AAE3B;EACC,oBC3EqB;ED4ErB,eC3EkB;ED6ElB,iBAAiB;EACjB,oBAAoB;CACpB;;AEjDG;EFqDH;IAEE,WAAW;GACX;EAHF;IAME,WAAW;IACX,eAAe;IACf,kBAAkB;GAClB;CGiBF;;AHZD;EACC;IAAkB,0BAAsB;QAAtB,sBAAsB;GAAI;EAC5C;IACC,WAAW;IACX,oBAAoB;GACpB;EACD;IACC,mBAAmB;IACnB,WAAW;GACX;CGiBD;;AHdD;EACC;IACC,iBAAiB;GACjB;EAED;IACC,2BAA2B;GAC3B;EAED;IACC,cAAc;GACd;EAED;IACC,0BAA0B;GAC1B;EAED;IACC,2BAA2B;GAC3B;EAED;IACC,0BAA0B;IAC1B,iCAAiC;GACjC;CGYD;;AC9JD;EACC,qEHoBgE;EGnBhE,iBAAiB;CACjB;;AAED;;EAEC,+BHKqB;EGJrB,iBAAiB;CACjB;;AAID;EACa,iBAAiB;CAAI;;AADlC;EAEa,gBAAgB;CAAI;;AAFjC;EAGU,gBAAgB;CAAI;;AAH9B;EAIgB,gBAAgB;CAAG;;AAKnC;EACC,gBAAgB;CAMhB;;AAPD;EAIE,iBAAiB;EACjB,qBAAqB;CACrB;;AAGF;EACC,mBAAmB;CACnB;;AAGD;EACC;IACC,iBAAiB;GAGjB;EAJD;IAGiB,eAAe;GAAI;CDuKpC","file":"resume.css","sourcesContent":["/**\n *  LAYOUT.SCSS\n *\n * \tThis could be considered our \"primary stylesheet\". \n * \tIt is responsible for a few things:\n *\n *\n *  1. It defines the styles for our basic site layout, and\n *     components that are global and found on (almost) every page. \n *     Here you'll find styles for the site header and footer, \n *     sidebars, etc. \n *\n *  2. It's the 'base' stylesheet that should be imported\n *     once on all pages. Imported it gets you access\n *     to everything in our init.scss.\n *\n *     NOTE: While this sheet should be imported on every page,\n *     it should not be imported in EVERY stylesheet. This\n *     stylesheet contains output style rules. importing it\n *     more than once on any given page will result in all\n *     of the rules in this file being output multiple times.\n *\n * \t   The recommended approach would be to import this file\n * \t   once in your \"main\" stylesheet file for a page. If \n * \t   the page includes other stylesheets, import the init.scss\n * \t   directly, instead of relying on this layout.scss file.\n */\n\n@import 'init';\n\n.flex-container {\n\tdisplay: flex;\n\tflex-flow: row wrap;\n\tjustify-content: space-between;\n\talign-items: stretch;\n}\n\n.print-only-block,\n.print-only-inline {\n\tdisplay: none;\n}\n\n#ResumeHeader {\n\tpadding-top: 1em;\n\tpadding-bottom: 1.5em;\n\tline-height: 1.2;\n\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\tjustify: space-between;\n\t\talign-items: stretch;\n\t}\n\n\t.hero, .contact {\n\t\tflex: 0 1 auto;\n\t\twidth: 100%;\n\t}\n\n\t.contact {\n\t\tpadding-top: 1em;\n\t\ttext-align: center;\n\t}\n\n\t.site-logo {\n\t\tfloat: left;\n\t\theight: 4.5em;\n\t\tmargin-right: .75em;\n\t}\n\n\t.site-title {\n\t\tfont-family: $AltFont;\n\t}\n\n\t.my-name { \n\t\tfont-size: 2.5em; \n\t}\n\t.job-title {\n\t\tfont-weight: 300;\n\t}\n\n}\n\n\n#PrimayContent, #Sidebar {flex: 0 1 auto; }\n#PrimaryContent { width: 100%; }\n#Sidebar { width: 100%; }\n\n#ResumeFooter {\n\tbackground: $PrimaryColor;\n\tcolor: $GrayColor;\n\n\tpadding-top: 2em;\n\tpadding-bottom: 2em;\t\n}\n\n\n@include media-breakpoint-up(sm) {\n\t#ResumeHeader {\n\t\t.hero {\n\t\t\twidth: 70%;\n\t\t}\n\n\t\t.contact {\n\t\t\twidth: 30%;\n\t\t\tpadding-top: 0;\n\t\t\ttext-align: right;\n\t\t}\n\t}\n}\n\n$min: breakpoint-min(md, $grid-breakpoints);\n@media print, (min-width: $min) {\n\t.flex-container { flex-flow: row nowrap; }\n\t#PrimaryContent { \n\t\twidth: 75%; \n\t\tpadding-right: 15px;\n\t}\n\t#Sidebar { \n\t\tpadding-left: 15px;\n\t\twidth: 25%; \n\t}\n}\n\n@media print {\n\tbody {\n\t\tfont-size: .9rem;\n\t}\n\n\t.container {\n\t\tmax-width: none !important;\n\t}\n\n\t#ResumeFooter {\n\t\tdisplay: none;\n\t}\n\n\t.print-only-block {\n\t\tdisplay: block !important;\n\t}\n\n\t.print-only-inline {\n\t\tdisplay: inline !important;\n\t}\n\n\ta {\n\t\tcolor: inherit !important;\n\t\ttext-decoration: none !important;\n\t}\n\n}","/** \n    This is where we initialize global variables that\n    are used throughout the site's css. \n\n    In addition to our variables, we'll also go ahead and\n    pull in some bootstrap components that we use often, including:\n    - The Bootstrap variables\n    - The Bootsrap Grid breakpoint media query mixins \n\t\n\tNote that we are using bootstrap v4 on this site\n*/\n\n/** COLORS **/\n$ActionColor: #ff5f2e;\n$PrimaryColor: #004e66;\n$GrayColor: #e1eef6;\n$AltColor: #fcbe32; \n\n\n/** TYPOGRAPHY **/\n$SansFont: \"Source Sans Pro\", \"Helvetica Neue\", Arial, sans-serif;\n$SerifFont: Georgia, \"Times New Roman\", Times, serif;\n$MonoFont:  \"Ubunto Monto\", Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n$AltFont: \"Roboto Condensed\", \"Helvetica Neue\", Arial, sans-serif;\n\n$PrimaryFont: $SansFont;\n\n\n/*\n * Include basic boostrap variables, as well as bootrap's mixins for responsive breakpoints.\n */\n@import 'bootstrap/scss/variables';\n@import 'bootstrap/scss/mixins/breakpoints';\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 544px, md: 768px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 544px, md: 768px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 544px, md: 768px))\n//    544px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.1.\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 544px, md: 768px))\n//    767px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  @include media-breakpoint-up($name, $breakpoints) {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  @include media-breakpoint-up($lower, $breakpoints) {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n","/**\n *  LAYOUT.SCSS\n *\n * \tThis could be considered our \"primary stylesheet\". \n * \tIt is responsible for a few things:\n *\n *\n *  1. It defines the styles for our basic site layout, and\n *     components that are global and found on (almost) every page. \n *     Here you'll find styles for the site header and footer, \n *     sidebars, etc. \n *\n *  2. It's the 'base' stylesheet that should be imported\n *     once on all pages. Imported it gets you access\n *     to everything in our init.scss.\n *\n *     NOTE: While this sheet should be imported on every page,\n *     it should not be imported in EVERY stylesheet. This\n *     stylesheet contains output style rules. importing it\n *     more than once on any given page will result in all\n *     of the rules in this file being output multiple times.\n *\n * \t   The recommended approach would be to import this file\n * \t   once in your \"main\" stylesheet file for a page. If \n * \t   the page includes other stylesheets, import the init.scss\n * \t   directly, instead of relying on this layout.scss file.\n */\n/** \n    This is where we initialize global variables that\n    are used throughout the site's css. \n\n    In addition to our variables, we'll also go ahead and\n    pull in some bootstrap components that we use often, including:\n    - The Bootstrap variables\n    - The Bootsrap Grid breakpoint media query mixins \n\t\n\tNote that we are using bootstrap v4 on this site\n*/\n/** COLORS **/\n/** TYPOGRAPHY **/\n/*\n * Include basic boostrap variables, as well as bootrap's mixins for responsive breakpoints.\n */\n.flex-container {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: stretch;\n}\n\n.print-only-block,\n.print-only-inline {\n  display: none;\n}\n\n#ResumeHeader {\n  padding-top: 1em;\n  padding-bottom: 1.5em;\n  line-height: 1.2;\n}\n\n#ResumeHeader .container {\n  display: flex;\n  flex-flow: row wrap;\n  justify: space-between;\n  align-items: stretch;\n}\n\n#ResumeHeader .hero, #ResumeHeader .contact {\n  flex: 0 1 auto;\n  width: 100%;\n}\n\n#ResumeHeader .contact {\n  padding-top: 1em;\n  text-align: center;\n}\n\n#ResumeHeader .site-logo {\n  float: left;\n  height: 4.5em;\n  margin-right: .75em;\n}\n\n#ResumeHeader .site-title {\n  font-family: \"Roboto Condensed\", \"Helvetica Neue\", Arial, sans-serif;\n}\n\n#ResumeHeader .my-name {\n  font-size: 2.5em;\n}\n\n#ResumeHeader .job-title {\n  font-weight: 300;\n}\n\n#PrimayContent, #Sidebar {\n  flex: 0 1 auto;\n}\n\n#PrimaryContent {\n  width: 100%;\n}\n\n#Sidebar {\n  width: 100%;\n}\n\n#ResumeFooter {\n  background: #004e66;\n  color: #e1eef6;\n  padding-top: 2em;\n  padding-bottom: 2em;\n}\n\n@media (min-width: 544px) {\n  #ResumeHeader .hero {\n    width: 70%;\n  }\n  #ResumeHeader .contact {\n    width: 30%;\n    padding-top: 0;\n    text-align: right;\n  }\n}\n\n@media print, (min-width: 768px) {\n  .flex-container {\n    flex-flow: row nowrap;\n  }\n  #PrimaryContent {\n    width: 75%;\n    padding-right: 15px;\n  }\n  #Sidebar {\n    padding-left: 15px;\n    width: 25%;\n  }\n}\n\n@media print {\n  body {\n    font-size: .9rem;\n  }\n  .container {\n    max-width: none !important;\n  }\n  #ResumeFooter {\n    display: none;\n  }\n  .print-only-block {\n    display: block !important;\n  }\n  .print-only-inline {\n    display: inline !important;\n  }\n  a {\n    color: inherit !important;\n    text-decoration: none !important;\n  }\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \"Roboto Condensed\", \"Helvetica Neue\", Arial, sans-serif;\n  font-weight: 300;\n}\n\narticle + article,\n#Sidebar article {\n  border-top: 1px dotted #004e66;\n  padding-top: 1em;\n}\n\n.job .position {\n  margin-bottom: 0;\n}\n\n.job .employer {\n  font-size: .9em;\n}\n\n.job .dates {\n  font-size: .9em;\n}\n\n.job .description {\n  margin-top: 1em;\n}\n\n#Sidebar {\n  font-size: .9em;\n}\n\n#Sidebar h6 {\n  font-weight: 400;\n  margin-bottom: .25em;\n}\n\n.school {\n  margin-bottom: 1em;\n}\n\n@media print, (min-width: 768px) {\n  #Sidebar article {\n    border-top: none;\n  }\n  #Sidebar article:first-child {\n    padding-top: 0;\n  }\n}\n","@import 'layout';\n\nh1, h2, h3, h4, h5, h6 {\n\tfont-family: $AltFont;\n\tfont-weight: 300;\n}\n\narticle + article,\n#Sidebar article {\n\tborder-top: 1px dotted $PrimaryColor;\n\tpadding-top: 1em;\n}\n\n\n\n.job {\n\t.position { margin-bottom: 0; }\n\t.employer { font-size: .9em; }\n\t.dates { font-size: .9em; }\n\t.description { margin-top: 1em;}\n\n\n}\n\n#Sidebar {\n\tfont-size: .9em;\n\n\th6 {\n\t\tfont-weight: 400;\n\t\tmargin-bottom: .25em;\n\t}\n}\n\n.school {\n\tmargin-bottom: 1em;\n}\n\n$min: breakpoint-min(md, $grid-breakpoints);\n@media print, (min-width: $min) {\n\t#Sidebar article {\n\t\tborder-top: none;\n\n\t\t&:first-child { padding-top: 0; }\n\t}\n}\n"],"sourceRoot":"/source/"}